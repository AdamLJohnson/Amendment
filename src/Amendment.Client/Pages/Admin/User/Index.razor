@page "/Admin/User"
@using Microsoft.AspNetCore.Authorization
@using Amendment.Client.Repository
@using Amendment.Shared.Responses
@attribute [Authorize(Roles = "System Administrator")]
@inject IUserRepository UserRepository

<CustomPageTitle>Users</CustomPageTitle>

<h1>Users</h1>
<Row>
    <Column ColumnSize="ColumnSize.Is12" TextAlignment="TextAlignment.End">
        <Button Color="Color.Success" Type="ButtonType.Link" To="/Admin/User/Create">Create</Button>
    </Column>
</Row>

<Row>
    <Column ColumnSize="ColumnSize.Is12">
        <Table Striped>
            <TableHeader>
                <TableRow>
                    <TableHeaderCell>Username</TableHeaderCell>
                    <TableHeaderCell>Email</TableHeaderCell>
                    <TableHeaderCell>Name</TableHeaderCell>
                    <TableHeaderCell></TableHeaderCell>
                </TableRow>
            </TableHeader>
            <TableBody>
                <Repeater Items="@_users">
                    <TableRow>
                        <TableRowCell>@context.Username</TableRowCell>
                        <TableRowCell>@context.Email</TableRowCell>
                        <TableRowCell>@context.Name</TableRowCell>
                        <TableRowCell TextAlignment="TextAlignment.End">
                            <Button Color="Color.Primary" Type="ButtonType.Link" To=@($"/Admin/User/Edit/{context.Id.ToString()}")>Edit</Button>
                            <Button Color="Color.Danger" Clicked="() => OnDelete(context.Id)" To="#">Delete</Button>
                        </TableRowCell>
                    </TableRow>
                </Repeater>
                @if (!_users.Any())
                {
                    <TableRow>
                        <TableRowCell ColumnSpan="4">No Users Found</TableRowCell>
                    </TableRow>
                }
            </TableBody>
        </Table>
    </Column>
</Row>

<Modal @ref="@_modalRef">
    <ModalContent Centered>
        <ModalHeader>
            <ModalTitle>Delete User</ModalTitle>
            <CloseButton/>
        </ModalHeader>
        <ModalBody>
            Are you sure you want to delete this user?
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="() => _modalRef!.Hide()">Close</Button>
            <Button Color="Color.Primary" Clicked="ConfirmUser">Save Changes</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

@code
{
    private Modal? _modalRef;
    private IEnumerable<UserResponse> _users = Enumerable.Empty<UserResponse>();
    private int? _userIdToDelete = null;

    protected override async Task OnInitializedAsync() => _users = await UserRepository.GetAsync();

    private Task OnDelete(int id)
    {
        _userIdToDelete = id;
        return _modalRef!.Show();
    }

    private async Task ConfirmUser()
    {
        await _modalRef!.Hide();
        if (_userIdToDelete is null)
            return;
        await UserRepository.DeleteAsync(_userIdToDelete.Value);
        var get = await UserRepository.GetAsync();
        _users = get;
    }
}