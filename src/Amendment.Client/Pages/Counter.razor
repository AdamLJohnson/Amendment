@page "/counter"
@using System.Security.Claims
@using Amendment.Client.Repository
@using Amendment.Shared
@using Amendment.Shared.Responses
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "System Administrator")]
@inject IAmendmentRepository AmendmentRepository

<CustomPageTitle>Counter</CustomPageTitle>

<AuthorizeView>
    <Authorized>
        The user: @context.User.FindFirst(ClaimTypes.Name).Value is authorized
    </Authorized>
    <NotAuthorized>
        The User is not authorized Test
    </NotAuthorized>
</AuthorizeView>

<h1>Counter @amendments.Count()</h1>

<Row>
    <Column ColumnSize="ColumnSize.Is5">
        <Slider TValue="decimal" Value="25m" Max="100m" />
    </Column>
</Row>


<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; }
    private int currentCount = 0;

    private async Task IncrementCount()
    {
        var authState = await AuthState;
        var user = authState.User;
        if (user.Identity.IsAuthenticated)
            currentCount++;
        else
            currentCount--;
    }

    protected override bool ShouldRender()
    {
        return true;
    }

    private IEnumerable<AmendmentResponse> amendments = Enumerable.Empty<AmendmentResponse>();

    protected override async Task OnInitializedAsync()
    {
        var get = await AmendmentRepository.GetAsync();
        amendments = get;
    }

}
