@using Amendment.Shared.Responses
@using Amendment.Client.Repository
@inject ILanguageRepository LanguageRepository
@inject IAmendmentBodyRepository AmendmentBodyRepository

<h3>Amendment Texts</h3>

<Table Striped>
    <TableHeader>
        <TableRow>
            <TableHeaderCell>Language</TableHeaderCell>
            <TableHeaderCell></TableHeaderCell>
        </TableRow>
    </TableHeader>
    <TableBody>
        <Repeater Items="@_languages">
            <TableRow>
                <TableRowCell>@context.LanguageName</TableRowCell>
                <TableRowCell TextAlignment="TextAlignment.Center">
                    @if (AmendmentBodies.Any(x => x.LanguageId == context.Id))
                    {
                        var amendmentBody = AmendmentBodies.First(x => x.LanguageId == context.Id);
                        <Button Color="Color.Primary" Type="ButtonType.Link" To=@($"/Amendment/{AmendmentId}/Body/Edit/{amendmentBody.Id}")>Edit</Button>
                        <span></span>
                        if (PrimaryLanguageId != amendmentBody.LanguageId)
                        {
                            <Button Color="Color.Danger" Clicked="() => ShowConfirmDelete(amendmentBody.Id)">Delete</Button>
                        }
                    }
                    else
                    {
                        <Button Color="Color.Success" Type="ButtonType.Link" To=@($"/Amendment/{AmendmentId}/Body/Create/{context.Id}")>Create</Button>
                    }
                </TableRowCell>
            </TableRow>
        </Repeater>
    </TableBody>
</Table>

<Modal @ref="@_modalRef" Closed="ModalClosed">
    <ModalContent Centered>
        <ModalHeader>
            <ModalTitle>Delete Text</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            Are you sure you want to delete this amendment text?
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="() => _modalRef!.Hide()">Close</Button>
            <Button Color="Color.Primary" Clicked="DeleteBody">Delete Text</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

@code
{
    private Modal? _modalRef;
    [Parameter, EditorRequired]
    public int AmendmentId { get; set; }
    [Parameter, EditorRequired]
    public int PrimaryLanguageId { get; set; }
    [Parameter, EditorRequired]
    public List<AmendmentBodySummary> AmendmentBodies { get; set; } = new();

    IEnumerable<LanguageResponse> _languages = Enumerable.Empty<LanguageResponse>();
    int _deleteBody = 0;

    protected override async Task OnInitializedAsync()
    {
        _languages = await LanguageRepository.GetAsync();
    }

    private async Task DeleteBody()
    {
        await AmendmentBodyRepository.DeleteAsync(AmendmentId, _deleteBody);
        AmendmentBodies.RemoveAll(x => x.Id == _deleteBody);
        await _modalRef!.Hide();
    }

    private void ShowConfirmDelete(int amendmentBodyId)
    {
        _deleteBody = amendmentBodyId;
        _modalRef!.Show();
    }

    private void ModalClosed()
    {
        _deleteBody = 0;
    }
}
