@using Amendment.Client.Repository
@using Microsoft.AspNetCore.Components.Authorization
@inject IAccountRepository AccountRepository
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthStateProvider

@code {
    [Parameter]
    public RenderFragment ChildContent { get; set; } = null!;

    private bool _redirected = false;

    protected override async Task OnInitializedAsync()
    {
        // Prevent redirection loops
        if (_redirected)
            return;

        var currentUrl = NavigationManager.Uri;
        // Don't redirect if we're already on the change-password page
        if (currentUrl.Contains("/change-password", StringComparison.OrdinalIgnoreCase))
            return;

        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        if (authState.User.Identity?.IsAuthenticated == true)
        {
            // Check if user needs to change password
            var requirePasswordChange = await AccountRepository.GetRequirePasswordChange();
            if (requirePasswordChange)
            {
                // Redirect to password change page
                _redirected = true;
                NavigationManager.NavigateTo("/change-password", forceLoad: false);
            }
        }
    }
}

@ChildContent
