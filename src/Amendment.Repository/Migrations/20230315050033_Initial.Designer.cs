// <auto-generated />
using System;
using Amendment.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Amendment.Repository.Migrations
{
    [DbContext(typeof(AmendmentContext))]
    [Migration("20230315050033_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Amendment.Model.DataModel.Amendment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .HasColumnType("text");

                    b.Property<int>("EnteredBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsLive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("LastUpdatedBy")
                        .HasColumnType("integer");

                    b.Property<string>("LegisId")
                        .HasColumnType("text");

                    b.Property<string>("Motion")
                        .HasColumnType("text");

                    b.Property<int>("PrimaryLanguageId")
                        .HasColumnType("integer");

                    b.Property<string>("Source")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PrimaryLanguageId");

                    b.ToTable("Amendment");
                });

            modelBuilder.Entity("Amendment.Model.DataModel.AmendmentBody", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AmendBody")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("AmendId")
                        .HasColumnType("integer");

                    b.Property<int>("AmendStatus")
                        .HasColumnType("integer");

                    b.Property<int>("EnteredBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsLive")
                        .HasColumnType("boolean");

                    b.Property<int>("LanguageId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("LastUpdatedBy")
                        .HasColumnType("integer");

                    b.Property<int>("Page")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("AmendId", "LanguageId");

                    b.ToTable("AmendmentBody");
                });

            modelBuilder.Entity("Amendment.Model.DataModel.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("LanguageCode")
                        .HasColumnType("text");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Language");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LanguageCode = "ENG",
                            LanguageName = "English"
                        },
                        new
                        {
                            Id = 2,
                            LanguageCode = "SPA",
                            LanguageName = "Spanish"
                        },
                        new
                        {
                            Id = 3,
                            LanguageCode = "FRA",
                            LanguageName = "French"
                        });
                });

            modelBuilder.Entity("Amendment.Model.DataModel.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EnteredBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("LastUpdatedBy")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EnteredBy = -1,
                            EnteredDate = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdated = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = -1,
                            Name = "System Administrator"
                        },
                        new
                        {
                            Id = 2,
                            EnteredBy = -1,
                            EnteredDate = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdated = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = -1,
                            Name = "Screen Controller"
                        },
                        new
                        {
                            Id = 3,
                            EnteredBy = -1,
                            EnteredDate = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdated = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = -1,
                            Name = "Amendment Editor"
                        },
                        new
                        {
                            Id = 4,
                            EnteredBy = -1,
                            EnteredDate = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdated = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = -1,
                            Name = "Translator"
                        },
                        new
                        {
                            Id = 5,
                            EnteredBy = -1,
                            EnteredDate = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdated = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = -1,
                            Name = "Toast Notifications"
                        });
                });

            modelBuilder.Entity("Amendment.Model.DataModel.SystemSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EnteredBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("LastUpdatedBy")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("SystemSetting");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EnteredBy = -1,
                            EnteredDate = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Key = "ShowDeafSigner",
                            LastUpdated = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = -1,
                            Value = "1"
                        },
                        new
                        {
                            Id = 2,
                            EnteredBy = -1,
                            EnteredDate = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Key = "ShowDeafSignerBox",
                            LastUpdated = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = -1,
                            Value = "1"
                        },
                        new
                        {
                            Id = 3,
                            EnteredBy = -1,
                            EnteredDate = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Key = "InvertedSlideText",
                            LastUpdated = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = -1,
                            Value = "1"
                        });
                });

            modelBuilder.Entity("Amendment.Model.DataModel.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int>("EnteredBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("LastUpdatedBy")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@admin.com",
                            EnteredBy = -1,
                            EnteredDate = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdated = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = -1,
                            Name = "Admin",
                            Password = "$2b$12$HbvEC6UaeXiGGlv8ztvzL.SB6oBXKi2QoBkJsjwQvDJGpQ59CmWrq",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.Property<int>("RolesId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("RolesId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            RolesId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Amendment.Model.DataModel.Amendment", b =>
                {
                    b.HasOne("Amendment.Model.DataModel.Language", "PrimaryLanguage")
                        .WithMany()
                        .HasForeignKey("PrimaryLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrimaryLanguage");
                });

            modelBuilder.Entity("Amendment.Model.DataModel.AmendmentBody", b =>
                {
                    b.HasOne("Amendment.Model.DataModel.Amendment", null)
                        .WithMany("AmendmentBodies")
                        .HasForeignKey("AmendId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Amendment.Model.DataModel.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.HasOne("Amendment.Model.DataModel.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Amendment.Model.DataModel.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Amendment.Model.DataModel.Amendment", b =>
                {
                    b.Navigation("AmendmentBodies");
                });
#pragma warning restore 612, 618
        }
    }
}
